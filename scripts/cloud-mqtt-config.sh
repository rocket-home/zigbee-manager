#!/usr/bin/env bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–ª–∞—á–Ω–æ–≥–æ MQTT –±—Ä–æ–∫–µ—Ä–∞ (—É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
# –ê–≤—Ç–æ—Ä: Zigbee Manager

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
ENV_FILE="../.env"

# –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
CLOUD_MQTT_HOST="mq.rocket-home.ru"
CLOUD_MQTT_PORT=8883
CLOUD_MQTT_PROTOCOL=3.11
CLOUD_MQTT_KEEPALIVE=60
CLOUD_MQTT_CLEAN=true
CLOUD_MQTT_TOPIC="#"
CLOUD_MQTT_TOPIC_DIRECTION="both"
CLOUD_MQTT_TOPIC_QOS=2

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f "$ENV_FILE" ]; then
    echo -e "${RED}‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: make setup${NC}"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ .env —Ñ–∞–π–ª–µ
update_env_var() {
    local var_name="$1"
    local var_value="$2"
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º awk –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    if grep -q "^${var_name}=" "$ENV_FILE"; then
        awk -v var="$var_name" -v val="$var_value" 'BEGIN{FS=OFS="="} $1==var {$2=val} 1' "$ENV_FILE" > "$ENV_FILE.tmp" && mv "$ENV_FILE.tmp" "$ENV_FILE"
    else
        echo "${var_name}=${var_value}" >> "$ENV_FILE"
    fi
}

# –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
read -p "$(echo -e "${YELLOW}–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (remote_username): ${NC}")" username

# –ü–∞—Ä–æ–ª—å
echo -n -e "${YELLOW}–ü–∞—Ä–æ–ª—å (remote_password): ${NC}"
read -s password
echo

# –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª–∏–µ–Ω—Ç–∞
read -p "$(echo -e "${YELLOW}–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª–∏–µ–Ω—Ç–∞ [zigbee-manager-bridge]: ${NC}")" client_id
client_id=${client_id:-zigbee-manager-bridge}

echo ""
echo -e "${BLUE}üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:${NC}"
echo -e "   ‚Ä¢ –•–æ—Å—Ç: ${CLOUD_MQTT_HOST}:${CLOUD_MQTT_PORT} (TLS)"
echo -e "   ‚Ä¢ –ü—Ä–æ—Ç–æ–∫–æ–ª: MQTT ${CLOUD_MQTT_PROTOCOL}"
echo -e "   ‚Ä¢ –ö–ª–∏–µ–Ω—Ç ID: ${client_id}"
echo -e "   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${username}"
echo -e "   ‚Ä¢ –¢–æ–ø–∏–∫: # (both, QoS 2)"
echo -e "   ‚Ä¢ TLS: –≤–∫–ª—é—á—ë–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
echo ""

read -p "$(echo -e "${YELLOW}–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —ç—Ç–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏? [y/N]: ${NC}")" confirm
if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.${NC}"
    exit 0
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞
echo -e "${BLUE}üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞...${NC}"
update_env_var "CLOUD_MQTT_ENABLED" "true"
update_env_var "CLOUD_MQTT_HOST" "$CLOUD_MQTT_HOST"
update_env_var "CLOUD_MQTT_PORT" "$CLOUD_MQTT_PORT"
update_env_var "CLOUD_MQTT_PROTOCOL" "$CLOUD_MQTT_PROTOCOL"
update_env_var "CLOUD_MQTT_USERNAME" "$username"
update_env_var "CLOUD_MQTT_PASSWORD" "$password"
update_env_var "CLOUD_MQTT_CLIENT_ID" "$client_id"
update_env_var "CLOUD_MQTT_KEEPALIVE" "$CLOUD_MQTT_KEEPALIVE"
update_env_var "CLOUD_MQTT_CLEAN" "$CLOUD_MQTT_CLEAN"
update_env_var "CLOUD_MQTT_TOPIC" "$CLOUD_MQTT_TOPIC"
update_env_var "CLOUD_MQTT_TOPIC_DIRECTION" "$CLOUD_MQTT_TOPIC_DIRECTION"
update_env_var "CLOUD_MQTT_TOPIC_QOS" "$CLOUD_MQTT_TOPIC_QOS"

echo -e "${GREEN}‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω${NC}"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
echo -e "${BLUE}üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...${NC}"
./generate-configs.sh

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ—Å—Ç–∞
if [ -f "../mqtt/config/bridge/cloud-bridge.conf" ]; then
    echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞: ../mqtt/config/bridge/cloud-bridge.conf${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ–∂–∏–¥–∞–µ–º–æ–º –º–µ—Å—Ç–µ${NC}"
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ mqtt –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è bridge-–∫–æ–Ω—Ñ–∏–≥–∞
if command -v docker-compose >/dev/null 2>&1; then
    DOCKER_CMD="docker-compose"
else
    DOCKER_CMD="docker compose"
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ mqtt
if $DOCKER_CMD ps mqtt >/dev/null 2>&1; then
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ MQTT...${NC}"
    $DOCKER_CMD restart mqtt
    echo -e "${GREEN}‚úÖ MQTT –±—Ä–æ–∫–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω, –º–æ—Å—Ç–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä MQTT –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ make start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤.${NC}"
fi

echo ""
echo -e "${GREEN}‚úÖ –û–±–ª–∞—á–Ω—ã–π MQTT –±—Ä–æ–∫–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω!${NC}"
echo -e "${BLUE}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo -e "   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: make restart"
echo -e "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –º–æ—Å—Ç–∞: make cloud-mqtt-status"
echo -e "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –º–æ—Å—Ç–∞: make logs-mqtt"
echo ""
echo -e "${YELLOW}üí° –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –º–æ—Å—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ CLOUD_MQTT_ENABLED=false –≤ .env${NC}" 