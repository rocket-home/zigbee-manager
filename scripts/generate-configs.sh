#!/usr/bin/env bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º envsubst
# –ê–≤—Ç–æ—Ä: Zigbee Manager

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
TEMPLATES_DIR="../templates"
CONFIG_DIR="../zigbee2mqtt/data"
MQTT_CONFIG_DIR="../mqtt/config"
ENV_FILE="../.env"

echo -e "${BLUE}üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è envsubst
if [ ! -f /usr/bin/envsubst ]; then
    echo -e "${RED}‚ùå envsubst –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ gettext-base:${NC}"
    echo -e "${YELLOW}   sudo apt-get install gettext-base${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f "$ENV_FILE" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...${NC}"
    cp ../env.example "$ENV_FILE"
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞${NC}"
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "${BLUE}üìã –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∏—Å–∫–ª—é—á–∞—è —Å–∏—Å—Ç–µ–º–Ω—ã–µ
while IFS='=' read -r key value; do
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    [[ $key =~ ^[[:space:]]*# ]] && continue
    [[ -z $key ]] && continue
    
    # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
    key=$(echo "$key" | xargs)
    value=$(echo "$value" | xargs)
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    [[ $key == "UID" ]] && continue
    [[ $key == "GID" ]] && continue
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    export "$key=$value"
done < "$ENV_FILE"

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è envsubst
export MQTT_PORT MQTT_WS_PORT MQTT_ALLOW_ANONYMOUS
export MQTT_LOG_FILE MQTT_LOG_TYPE MQTT_LOG_TIMESTAMP
export MQTT_PERSISTENCE MQTT_PERSISTENCE_LOCATION
export MQTT_MAX_INFLIGHT MQTT_MAX_QUEUED
export MQTT_PASSWORD_FILE MQTT_ACL_FILE MQTT_EXTRA_CONFIG

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Zigbee
# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –∑–∞–¥–∞–Ω—ã –∏–ª–∏ –∏–º–µ—é—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
pan_id_generated=false
extended_pan_id_generated=false
network_key_generated=false

# PAN ID
if [ -z "$ZIGBEE_PAN_ID" ] || [ "$ZIGBEE_PAN_ID" = "0x6754" ]; then
    ZIGBEE_PAN_ID=$(printf "0x%04X" $((RANDOM % 65534 + 1)))
    echo -e "${GREEN}‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω PAN ID: ${ZIGBEE_PAN_ID}${NC}"
    pan_id_generated=true
else
    echo -e "${BLUE}‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π PAN ID: ${ZIGBEE_PAN_ID}${NC}"
fi

# Extended PAN ID
if [ -z "$ZIGBEE_EXTENDED_PAN_ID" ] || [ "$ZIGBEE_EXTENDED_PAN_ID" = "DD:DD:DD:DD:DD:DD:DD:DD" ]; then
    ZIGBEE_EXTENDED_PAN_ID=$(printf "%02X:%02X:%02X:%02X:%02X:%02X:%02X:%02X" \
        $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) \
        $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)))
    echo -e "${GREEN}‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω Extended PAN ID: ${ZIGBEE_EXTENDED_PAN_ID}${NC}"
    extended_pan_id_generated=true
else
    echo -e "${BLUE}‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π Extended PAN ID: ${ZIGBEE_EXTENDED_PAN_ID}${NC}"
fi

# Network Key
if [ -z "$ZIGBEE_NETWORK_KEY" ] || [ "$ZIGBEE_NETWORK_KEY" = "GENERATE" ]; then
    ZIGBEE_NETWORK_KEY=$(printf "%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X" \
        $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) \
        $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) \
        $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) \
        $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)))
    echo -e "${GREEN}‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω Network Key: ${ZIGBEE_NETWORK_KEY}${NC}"
    network_key_generated=true
else
    echo -e "${BLUE}‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π Network Key: ${ZIGBEE_NETWORK_KEY}${NC}"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
# MQTT –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
MQTT_PORT=${MQTT_PORT:-1883}
MQTT_WS_PORT=${MQTT_WS_PORT:-9001}
MQTT_ALLOW_ANONYMOUS=${MQTT_ALLOW_ANONYMOUS:-true}
MQTT_LOG_FILE=${MQTT_LOG_FILE:-/mosquitto/log/mosquitto.log}
MQTT_LOG_TYPE=${MQTT_LOG_TYPE:-all}
MQTT_LOG_TIMESTAMP=${MQTT_LOG_TIMESTAMP:-true}
MQTT_PERSISTENCE=${MQTT_PERSISTENCE:-true}
MQTT_PERSISTENCE_LOCATION=${MQTT_PERSISTENCE_LOCATION:-/mosquitto/data/}
MQTT_MAX_INFLIGHT=${MQTT_MAX_INFLIGHT:-20}
MQTT_MAX_QUEUED=${MQTT_MAX_QUEUED:-100}
MQTT_PASSWORD_FILE=${MQTT_PASSWORD_FILE:-}
MQTT_ACL_FILE=${MQTT_ACL_FILE:-}
MQTT_EXTRA_CONFIG=${MQTT_EXTRA_CONFIG:-}

MQTT_BASE_TOPIC=${MQTT_BASE_TOPIC:-zigbee2mqtt}
MQTT_SERVER=${MQTT_SERVER:-mqtt://mqtt:1883}
MQTT_CLIENT_ID=${MQTT_CLIENT_ID:-zigbee2mqtt_bridge}
MQTT_KEEPALIVE=${MQTT_KEEPALIVE:-60}
MQTT_VERSION=${MQTT_VERSION:-4}
MQTT_CLEAN=${MQTT_CLEAN:-true}
MQTT_RECONNECT_PERIOD=${MQTT_RECONNECT_PERIOD:-10}
MQTT_REJECT_UNAUTHORIZED=${MQTT_REJECT_UNAUTHORIZED:-false}
ZIGBEE_ADAPTER=${ZIGBEE_ADAPTER:-zstack}
ZIGBEE_CHANNELS=${ZIGBEE_CHANNELS:-[11, 15, 20, 25]}
ZIGBEE_SECURITY_NETWORK_KEY=${ZIGBEE_SECURITY_NETWORK_KEY:-true}
ZIGBEE_SECURITY_APPLICATION_KEY=${ZIGBEE_SECURITY_APPLICATION_KEY:-true}
ZIGBEE_SECURITY_TC_LINK_KEY=${ZIGBEE_SECURITY_TC_LINK_KEY:-true}
ZIGBEE_DEVICE_LEGACY=${ZIGBEE_DEVICE_LEGACY:-false}
ZIGBEE_LOG_LEVEL=${ZIGBEE_LOG_LEVEL:-info}
ZIGBEE_LOG_OUTPUT=${ZIGBEE_LOG_OUTPUT:-console}
ZIGBEE2MQTT_HOST=${ZIGBEE2MQTT_HOST:-0.0.0.0}
ZIGBEE_HOMEASSISTANT=${ZIGBEE_HOMEASSISTANT:-false}
PERMIT_JOIN=${PERMIT_JOIN:-false}

# –û–±–ª–∞—á–Ω—ã–π MQTT –±—Ä–æ–∫–µ—Ä (–º–æ—Å—Ç)
CLOUD_MQTT_ENABLED=${CLOUD_MQTT_ENABLED:-false}
CLOUD_MQTT_HOST=${CLOUD_MQTT_HOST:-mq.rocket-home.ru}
CLOUD_MQTT_PORT=${CLOUD_MQTT_PORT:-1883}
CLOUD_MQTT_PROTOCOL=${CLOUD_MQTT_PROTOCOL:-3.11}
CLOUD_MQTT_USERNAME=${CLOUD_MQTT_USERNAME:-}
CLOUD_MQTT_PASSWORD=${CLOUD_MQTT_PASSWORD:-}
CLOUD_MQTT_CLIENT_ID=${CLOUD_MQTT_CLIENT_ID:-zigbee-manager-bridge}
CLOUD_MQTT_KEEPALIVE=${CLOUD_MQTT_KEEPALIVE:-60}
CLOUD_MQTT_CLEAN=${CLOUD_MQTT_CLEAN:-true}
CLOUD_MQTT_BRIDGE_TOPIC=${CLOUD_MQTT_BRIDGE_TOPIC:-home/zigbee/#}
CLOUD_MQTT_LOCAL_TOPIC=${CLOUD_MQTT_LOCAL_TOPIC:-zigbee2mqtt/#}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
echo -e "${BLUE}üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π...${NC}"
if [ -f "${CONFIG_DIR}/configuration.yaml" ]; then
    BACKUP_FILE="${CONFIG_DIR}/configuration.yaml.backup.$(date +%Y%m%d_%H%M%S)"
    cp "${CONFIG_DIR}/configuration.yaml" "$BACKUP_FILE"
    echo -e "${GREEN}‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è Zigbee2MQTT: ${BACKUP_FILE}${NC}"
fi

if [ -f "${MQTT_CONFIG_DIR}/mosquitto.conf" ]; then
    MQTT_BACKUP="${MQTT_CONFIG_DIR}/mosquitto.conf.backup.$(date +%Y%m%d_%H%M%S)"
    if cp "${MQTT_CONFIG_DIR}/mosquitto.conf" "$MQTT_BACKUP" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è MQTT: ${MQTT_BACKUP}${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é MQTT (—Ñ–∞–π–ª –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å)${NC}"
    fi
fi

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Zigbee2MQTT
echo -e "${BLUE}üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Zigbee2MQTT...${NC}"
if [ -f "${TEMPLATES_DIR}/zigbee2mqtt-config.yaml.template" ]; then
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è envsubst
    export ZIGBEE_PAN_ID ZIGBEE_EXTENDED_PAN_ID ZIGBEE_NETWORK_KEY
    export MQTT_BASE_TOPIC MQTT_SERVER MQTT_USER MQTT_PASSWORD MQTT_CLIENT_ID
    export MQTT_KEEPALIVE MQTT_VERSION MQTT_CLEAN MQTT_RECONNECT_PERIOD MQTT_REJECT_UNAUTHORIZED
    export ZIGBEE_ADAPTER_PORT ZIGBEE_ADAPTER ZIGBEE_CHANNELS
    export ZIGBEE_SECURITY_NETWORK_KEY ZIGBEE_SECURITY_APPLICATION_KEY ZIGBEE_SECURITY_TC_LINK_KEY
    export ZIGBEE_DEVICE_LEGACY ZIGBEE_LOG_LEVEL ZIGBEE_LOG_OUTPUT
    export ZIGBEE2MQTT_PORT ZIGBEE2MQTT_HOST ZIGBEE_HOMEASSISTANT PERMIT_JOIN
    
    envsubst < "${TEMPLATES_DIR}/zigbee2mqtt-config.yaml.template" > "${CONFIG_DIR}/configuration.yaml"
    echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Zigbee2MQTT —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞${NC}"
else
    echo -e "${RED}‚ùå –®–∞–±–ª–æ–Ω Zigbee2MQTT –Ω–µ –Ω–∞–π–¥–µ–Ω: ${TEMPLATES_DIR}/zigbee2mqtt-config.yaml.template${NC}"
fi

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MQTT
echo -e "${BLUE}üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MQTT...${NC}"
if [ -f "${TEMPLATES_DIR}/mosquitto.conf.template" ]; then
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    mkdir -p "${MQTT_CONFIG_DIR}"
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è MQTT
    export MQTT_PORT MQTT_WS_PORT MQTT_ALLOW_ANONYMOUS
    export MQTT_LOG_FILE MQTT_LOG_TYPE MQTT_LOG_TIMESTAMP
    export MQTT_PERSISTENCE MQTT_PERSISTENCE_LOCATION
    export MQTT_MAX_INFLIGHT MQTT_MAX_QUEUED
    export MQTT_PASSWORD_FILE MQTT_ACL_FILE MQTT_EXTRA_CONFIG
    if envsubst < "${TEMPLATES_DIR}/mosquitto.conf.template" > "${MQTT_CONFIG_DIR}/mosquitto.conf" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MQTT —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –º–æ—Å—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p "${MQTT_CONFIG_DIR}/bridge"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ—Å—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –º–æ—Å—Ç –≤–∫–ª—é—á–µ–Ω
        if [ "$CLOUD_MQTT_ENABLED" = "true" ] && [ -f "${MQTT_CONFIG_DIR}/mosquitto-bridge.conf" ]; then
            mv "${MQTT_CONFIG_DIR}/mosquitto-bridge.conf" "${MQTT_CONFIG_DIR}/bridge/cloud-bridge.conf"
            echo -e "${BLUE}   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ—Å—Ç–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é bridge${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MQTT (–ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞)${NC}"
    fi
else
    echo -e "${RED}‚ùå –®–∞–±–ª–æ–Ω MQTT –Ω–µ –Ω–∞–π–¥–µ–Ω: ${TEMPLATES_DIR}/mosquitto.conf.template${NC}"
fi

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ—Å—Ç–∞ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
if [ "$CLOUD_MQTT_ENABLED" = "true" ]; then
    echo -e "${BLUE}üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ—Å—Ç–∞ –∫ –æ–±–ª–∞—á–Ω–æ–º—É MQTT...${NC}"
    if [ -f "${TEMPLATES_DIR}/mosquitto-bridge.conf.template" ]; then
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –º–æ—Å—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p "${MQTT_CONFIG_DIR}/bridge"
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –º–æ—Å—Ç–∞
        export CLOUD_MQTT_ENABLED
        export CLOUD_MQTT_HOST CLOUD_MQTT_PORT CLOUD_MQTT_PROTOCOL
        export CLOUD_MQTT_USERNAME CLOUD_MQTT_PASSWORD CLOUD_MQTT_CLIENT_ID
        export CLOUD_MQTT_KEEPALIVE CLOUD_MQTT_CLEAN
        export CLOUD_MQTT_BRIDGE_TOPIC CLOUD_MQTT_LOCAL_TOPIC
        
        if envsubst < "${TEMPLATES_DIR}/mosquitto-bridge.conf.template" > "${MQTT_CONFIG_DIR}/bridge/cloud-bridge.conf" 2>/dev/null; then
            echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ—Å—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ bridge${NC}"
            echo -e "${BLUE}   ‚Ä¢ –•–æ—Å—Ç: ${CLOUD_MQTT_HOST}:${CLOUD_MQTT_PORT}${NC}"
            echo -e "${BLUE}   ‚Ä¢ –ü—Ä–æ—Ç–æ–∫–æ–ª: MQTT ${CLOUD_MQTT_PROTOCOL}${NC}"
            echo -e "${BLUE}   ‚Ä¢ –¢–æ–ø–∏–∫–∏: ${CLOUD_MQTT_LOCAL_TOPIC} ‚Üî ${CLOUD_MQTT_BRIDGE_TOPIC}${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ—Å—Ç–∞ (–ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞)${NC}"
        fi
    else
        echo -e "${RED}‚ùå –®–∞–±–ª–æ–Ω –º–æ—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${TEMPLATES_DIR}/mosquitto-bridge.conf.template${NC}"
    fi
else
    echo -e "${YELLOW}‚ÑπÔ∏è  –ú–æ—Å—Ç –∫ –æ–±–ª–∞—á–Ω–æ–º—É MQTT –æ—Ç–∫–ª—é—á–µ–Ω (CLOUD_MQTT_ENABLED=false)${NC}"
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ—Å—Ç–∞, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ -f "${MQTT_CONFIG_DIR}/bridge/cloud-bridge.conf" ]; then
        rm "${MQTT_CONFIG_DIR}/bridge/cloud-bridge.conf"
        echo -e "${GREEN}‚úÖ –°—Ç–∞—Ä–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ—Å—Ç–∞ —É–¥–∞–ª–µ–Ω–∞${NC}"
    fi
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
echo -e "${BLUE}üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞...${NC}"
env_updated=false

if [ "$pan_id_generated" = "true" ]; then
    if grep -q "^ZIGBEE_PAN_ID=" "$ENV_FILE" 2>/dev/null; then
        sed -i "s/^ZIGBEE_PAN_ID=.*/ZIGBEE_PAN_ID=${ZIGBEE_PAN_ID}/" "$ENV_FILE"
    else
        echo "ZIGBEE_PAN_ID=${ZIGBEE_PAN_ID}" >> "$ENV_FILE"
    fi
    env_updated=true
fi

if [ "$extended_pan_id_generated" = "true" ]; then
    if grep -q "^ZIGBEE_EXTENDED_PAN_ID=" "$ENV_FILE" 2>/dev/null; then
        sed -i "s/^ZIGBEE_EXTENDED_PAN_ID=.*/ZIGBEE_EXTENDED_PAN_ID=${ZIGBEE_EXTENDED_PAN_ID}/" "$ENV_FILE"
    else
        echo "ZIGBEE_EXTENDED_PAN_ID=${ZIGBEE_EXTENDED_PAN_ID}" >> "$ENV_FILE"
    fi
    env_updated=true
fi

if [ "$network_key_generated" = "true" ]; then
    if grep -q "^ZIGBEE_NETWORK_KEY=" "$ENV_FILE" 2>/dev/null; then
        sed -i "s/^ZIGBEE_NETWORK_KEY=.*/ZIGBEE_NETWORK_KEY=${ZIGBEE_NETWORK_KEY}/" "$ENV_FILE"
    else
        echo "ZIGBEE_NETWORK_KEY=${ZIGBEE_NETWORK_KEY}" >> "$ENV_FILE"
    fi
    env_updated=true
fi

if [ "$env_updated" = "true" ]; then
    echo -e "${GREEN}‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω${NC}"
else
    echo -e "${BLUE}‚ÑπÔ∏è  .env —Ñ–∞–π–ª –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –∏–∑–º–µ–Ω—è–ª–∏—Å—å)${NC}"
fi

echo ""
echo -e "${GREEN}‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!${NC}"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
if [ "$pan_id_generated" = "true" ] || [ "$extended_pan_id_generated" = "true" ] || [ "$network_key_generated" = "true" ]; then
    echo -e "${BLUE}üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Zigbee:${NC}"
    if [ "$pan_id_generated" = "true" ]; then
        echo -e "   ‚Ä¢ PAN ID: ${ZIGBEE_PAN_ID} $(echo -e "${GREEN}[–ù–û–í–´–ô]${NC}")"
    else
        echo -e "   ‚Ä¢ PAN ID: ${ZIGBEE_PAN_ID} $(echo -e "${BLUE}[–°–£–©–ï–°–¢–í–£–Æ–©–ò–ô]${NC}")"
    fi
    
    if [ "$extended_pan_id_generated" = "true" ]; then
        echo -e "   ‚Ä¢ Extended PAN ID: ${ZIGBEE_EXTENDED_PAN_ID} $(echo -e "${GREEN}[–ù–û–í–´–ô]${NC}")"
    else
        echo -e "   ‚Ä¢ Extended PAN ID: ${ZIGBEE_EXTENDED_PAN_ID} $(echo -e "${BLUE}[–°–£–©–ï–°–¢–í–£–Æ–©–ò–ô]${NC}")"
    fi
    
    if [ "$network_key_generated" = "true" ]; then
        echo -e "   ‚Ä¢ Network Key: ${ZIGBEE_NETWORK_KEY} $(echo -e "${GREEN}[–ù–û–í–´–ô]${NC}")"
    else
        echo -e "   ‚Ä¢ Network Key: ${ZIGBEE_NETWORK_KEY} $(echo -e "${BLUE}[–°–£–©–ï–°–¢–í–£–Æ–©–ò–ô]${NC}")"
    fi
    
    if [ "$pan_id_generated" = "true" ] || [ "$extended_pan_id_generated" = "true" ] || [ "$network_key_generated" = "true" ]; then
        echo ""
        echo -e "${YELLOW}üí° –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!${NC}"
    fi
else
    echo -e "${BLUE}üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Zigbee (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π):${NC}"
    echo -e "   ‚Ä¢ PAN ID: ${ZIGBEE_PAN_ID}"
    echo -e "   ‚Ä¢ Extended PAN ID: ${ZIGBEE_EXTENDED_PAN_ID}"
    echo -e "   ‚Ä¢ Network Key: ${ZIGBEE_NETWORK_KEY}"
fi

echo -e "${YELLOW}üí° –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: make restart${NC}" 